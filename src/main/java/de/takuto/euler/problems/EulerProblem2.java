package de.takuto.euler.problems;

import de.takuto.euler.EulerProblem;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 *
 * See: https://projecteuler.net/problem=2
 */
public class EulerProblem2 implements EulerProblem {


    public String solve() {
        int firstPrevious = 1;
        int secondPrevious = 2;
        int current = 0;

        int sumOfAllEven = 2;

        boolean assignToFirst = true;

        do {
            current = firstPrevious + secondPrevious;
            if(assignToFirst) {
                firstPrevious = current;
            } else {
                secondPrevious = current;
            }
            assignToFirst = !assignToFirst;

            if(current % 2 == 0) {
                sumOfAllEven += current;
            }

        } while(current < 4000000);
        return "The sum of all even evaluated terms smaller than 4 Million is " + sumOfAllEven;
    }


    public int getNumber() {
        return 2;
    }
}
